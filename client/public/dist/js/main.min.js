angular.module("config",[]).constant("env",{name:"development",api:"http://localhost:3000/",gitlab:{key:"f460f7500009f79ba2115fd74bd750b9076575a1c9081e36a873e1e8c67c24de",url:"http://docker.me:10080/",proxy:"http://localhost:3000/oauthproxy"}}),function(){function a(a){a.interceptors.push("authInterceptor"),a.defaults.useXDomain=!0,a.defaults.withCredentials=!0,a.defaults.headers.common.Accept="application/json",a.defaults.headers.common["Content-Type"]="application/json",delete a.defaults.headers.common["X-Requested-With"]}function b(a){a.when("/login",{controller:"loginController",templateUrl:"app/membership/views/login.html"}),a.when("/register",{controller:"registerController",templateUrl:"app/membership/views/register.html"}),a.when("/boards",{controller:"boardListController",templateUrl:"app/boards/views/board-list.html"}),a.when("/boards/new",{controller:"newBoardController",templateUrl:"app/boards/views/board-new.html"}),a.when("/boards/:id",{controller:"showBoardController",templateUrl:"app/boards/views/board-show.html"}),a.when("/boards/:board_id/settings",{controller:"boardSettingsController",templateUrl:"app/boards/views/board-settings.html"}),a.when("/boards/:board_id/backlog",{controller:"boardBacklogController",templateUrl:"app/boards/views/board-backlog.html"}),a.when("/tasks",{controller:"taskListController",templateUrl:"app/tasks/views/task-list.html"}),a.when("/boards/:board_id/tasks/new",{controller:"newTaskController",templateUrl:"app/tasks/views/task-new.html"}),a.when("/boards/:board_id/tasks/:task_id",{controller:"showTaskController",templateUrl:"app/tasks/views/task-show.html"}),a.when("/boards/:board_id/tasks/:task_id/edit",{controller:"editTaskController",templateUrl:"app/tasks/views/task-edit.html"})}function c(a){a.setRenderer({listitem:function(a){var b=a.indexOf("["),c=a.indexOf("]"),d=a.indexOf("x");if(0!==b||c!==b+2)return"<li>"+a+"</li>";var e=d>b&&c>d,f='<li class="checkbox-list-item">'+(e?'<input type="checkbox" checked disabled />':'<input type="checkbox" disabled />')+a.slice(c+1)+"</li>";return f},list:function(a,b){var c=$(a),d=c.find('input[type="checkbox"]'),e=!!d.length;return(e?'<ul class="checkbox-list">':"<ul>")+a+"</ul>"},image:function(a,b,c){return'<img class="col-xs-12" src="'+a+'"></img>'}})}function d(a){hello.init({gitlab:{name:"gitlab",oauth:{version:2,auth:a.gitlab.url+"oauth/authorize",grant:a.gitlab.url+"oauth/token",response_type:"code"},scope:{basic:""},base:a.gitlab.url+"api/v3/",get:{me:"user"}}})}function e(a,b){b.fillAuthData(),b.authentication.isAuth||(a.location.href="/#/login")}angular.module("main",["config","ngRoute","ngSanitize","hc.marked","toastr","LocalStorageModule"]).config(a).config(b).config(c).config(d).run(e),a.$inject=["$httpProvider"],b.$inject=["$routeProvider"],c.$inject=["markedProvider"],d.$inject=["env"],e.$inject=["$window","authServices"]}(),function(){function a(a,b){function c(a){a.headers=a.headers||{};var c=b.get("authData");return c&&(a.headers["x-auth-token"]=c.token),a}function d(b){401===b.status?a.location.href="/#/login":403===b.status&&(a.location.href="/#/")}return{request:c,responseError:d}}angular.module("main").factory("authInterceptor",a),a.$inject=["$window","localStorageService"]}(),function(){function a(a,b){function c(c){return a.get(b.api+"boards").success(function(a){c(null,a)})["catch"](c)}function d(c,d){return a.post(b.api+"boards",c).success(function(a){d(null,a)})["catch"](d)}function e(c,d){a.get(b.api+"boards/"+c).success(function(a){d(null,a)})["catch"](d)}function f(c,d){a.get(b.api+"boards/"+c+"/info").success(function(a){d(null,a)})["catch"](d)}function g(c,d){a.get(b.api+"boards/"+c+"/settings").then(k(d),l(d))}function h(c,d){a.get(b.api+"boards/"+c+"/backlog").then(k(d),l(d))}function i(c,d){a.post(b.api+"boards/"+c.board_id+"/"+c.type,{name:c.name}).then(k(d),l(d))}function j(c,d){a["delete"](b.api+"boards/"+c.board_id+"/"+c.type+"/"+c.attrId).then(k(d),l(d))}function k(a){return function(b){a(null,b?b.data:null)}}function l(a){return function(b){a(b.data)}}return{boards:c,createBoard:d,fetchBoard:e,fetchBoardInfo:f,fetchBoardSettings:g,fetchBacklog:h,addBoardAttribute:i,removeBoardAttribute:j}}angular.module("main").factory("boardServices",a),a.$inject=["$http","env"]}(),function(){function a(a,b){function c(c){a.get(b.api+"gitlab/projects").success(function(a){c(null,a)})["catch"](c)}return{projects:c}}angular.module("main").factory("gitlabServices",a),a.$inject=["$http","env"]}(),function(){function a(a,c,d,e){function f(){hello.init({gitlab:e.gitlab.key},{oauth_proxy:e.gitlab.proxy})}function g(b,c){a.post(e.api+"users",b).then(function(a){var b=n(a);return c(null,b)})["catch"](c)}function h(b,c){a.post(e.api+"users/session",b).then(function(a){var b=n(a);return c(null,b)},function(a){c(a)})}function i(b,c){a.post(e.api+"users/session/ldap",b).then(function(a){if(!a)return c("Invalid username and password.");var b=n(a);c(null,b)},function(a){c(a)})}function j(b){var c=hello("gitlab");c.login().then(function(d){c.api("me").then(function(c){a.post(e.api+"users/session/gitlab",c).then(function(a){var c=n(a);return b(null,c)})["catch"](function(a){return k(),b(a)})})},function(){})}function k(a){d.remove("authData"),b.isAuth=!1,b.user=null,a(null)}function l(){var a=d.get("authData");a&&(b.isAuth=!0,b.user=a.user)}function m(a){if(!b||!b.user)return!1;var c=b.user.roles;return c.indexOf(a)>-1}function n(a){var b={token:a.data.token,expires:a.data.expires,user:a.data.user};return d.set("authData",b),l(),b}return f(),{saveRegistration:g,login:h,ldapLogin:i,devLogin:j,logout:k,fillAuthData:l,hasRole:m,authentication:b}}angular.module("main").factory("authServices",a),a.$inject=["$http","$q","localStorageService","env"];var b={isAuth:!1,user:{}}}(),function(){function a(a,d){function e(e,f){var g=d.api+"users",h="function"!=typeof e,i=h?f:e;h&&(g+="?"+e),a.get(g).then(b(i),c(i))}return{list:e}}function b(a){return function(b){a(null,b?b.data:null)}}function c(a){return function(b){a(b.data)}}angular.module("main").factory("userServices",a),a.$inject=["$http","env"]}(),function(){function a(a,b){function c(c,d){a.post(b.api+"boards/"+c.boardId+"/tasks",c).then(i(d),j(d))}function d(c,d){a.get(b.api+"tasks/"+c).then(i(d),j(d))}function e(c,d){a.get(b.api+"tasks/search",{params:c}).then(i(d),j(d))}function f(c,d){a.put(b.api+"tasks/"+c._id,c).then(i(d),j(d))}function g(c,d){a.put(b.api+"tasks/"+c+"/complete").then(i(d),j(d))}function h(c,d){a["delete"](b.api+"tasks/"+c).then(i(d),j(d))}function i(a){return function(b){a(null,b?b.data:null)}}function j(a){return function(b){a(b.data)}}return{createTask:c,fetchTask:d,searchTasks:e,updateTask:f,completeTask:g,deleteTask:h}}angular.module("main").factory("taskServices",a),a.$inject=["$http","env"]}(),function(){function a(a,b,c,d,e,f,g){function h(){var c=b.board_id;e.fetchBacklog(c,function(b,c){if(b)return d.error(b);var e=c.tasks;delete c.tasks,a.board=c.board,a.tasks={approved:_.where(e,{approved:!0}),notApproved:_.where(e,{approved:!1})}})}function i(b){var c={_id:b._id,approved:!0};f.updateTask(c,function(c,e){if(c)return d.error(c);var f=a.tasks.notApproved.indexOf(b);a.tasks.notApproved.splice(f,1),a.tasks.approved.push(b)})}a.info={},a.board={},a.tasks={},a.isDeveloper=g.hasRole("developer"),a.isOwner=g.hasRole("owner"),a.approve=i,h()}angular.module("main").controller("boardBacklogController",a),a.$inject=["$scope","$routeParams","$location","toastr","boardServices","taskServices","authServices"]}(),function(){function a(a,b,c,d){function e(){d.boards(function(c,d){return c?b.error(c):void(a.boards=d)})}a.boards=[],a.roles=c.authentication.user.roles,e()}angular.module("main").controller("boardListController",a),a.$inject=["$scope","toastr","authServices","boardServices"]}(),function(){function a(a,b,c,d,e){function f(){e.projects(function(b,c){a.projects=c}),$('[data-toggle="tooltip"]').tooltip()}function g(b){b&&(a.stages.indexOf(b)>=0||(a.stages.push(b),a.stage=""))}function h(b){var c=a.stages.indexOf(b);c>=0&&a.stages.splice(c,1)}function i(){var c=a.board;c.stages=a.stages,console.log(c),d.createBoard(c,function(a,c){b.path("/boards/"+c._id)})}a.board={},a.projects=[],a.stages=[],a.addStage=g,a.removeStage=h,a.createBoard=i,f()}angular.module("main").controller("newBoardController",a),a.$inject=["$scope","$location","toastr","boardServices","gitlabServices"]}(),function(){function a(a,b,c,d){function e(){var e=b.board_id;d.fetchBoardSettings(e,function(b,d){return b?c.error(b):void(a.board=_.extend({priorities:[],sizes:[]},d))})}function f(b){b&&!_.findWhere(a.board.priorities,{name:b})&&d.addBoardAttribute({board_id:a.board._id,type:"priority",name:b},function(d,e){return d?c.error(d):(a.board.priorities.push({name:b,_id:e._id}),void(a.priority=""))})}function g(b){var e=a.board.priorities.indexOf(b);e>-1&&d.removeBoardAttribute({board_id:a.board._id,type:"priority",attrId:b._id},function(b,d){return b?c.error(b):void a.board.priorities.splice(e,1)})}function h(b){b&&!_.findWhere(a.board.sizes,{name:b})&&d.addBoardAttribute({board_id:a.board._id,type:"size",name:b},function(d,e){return d?c.error(d):(a.board.sizes.push({name:b,_id:e._id}),void(a.size=""))})}function i(b){var e=a.board.sizes.indexOf(b);e>-1&&d.removeBoardAttribute({board_id:a.board._id,type:"size",attrId:b._id},function(b,d){return b?c.error(b):void a.board.sizes.splice(e,1)})}a.board={},a.addPriority=f,a.removePriority=g,a.addSize=h,a.removeSize=i,e()}angular.module("main").controller("boardSettingsController",a),a.$inject=["$scope","$routeParams","toastr","boardServices"]}(),function(){function a(a,b,c,d,e){function f(){var d=b.id;e.fetchBoard(d,function(b,d){return b?c.error(b):(a.board=d.board,void(a.backlog=d.backlog))})}var g=d.authentication.user.roles;a.isAdmin=g.indexOf("admin")>-1,a.isOwner=g.indexOf("owner")>-1,a.boards=[],a.backlog=null,f()}angular.module("main").controller("showBoardController",a),a.$inject=["$scope","$routeParams","toastr","authServices","boardServices"]}(),function(){function a(a,b,c){function d(){c.logout(function(a){b.path("/login")})}a.auth=c.authentication,a.logout=d}angular.module("main").controller("mainController",a),a.$inject=["$scope","$location","authServices"]}(),function(){function a(a,b,c,d){function e(){d.login(a.loginData,function(a){b.path("/")},function(b){a.message=b})}function f(){d.ldapLogin(a.loginData,function(a,d){return a?c.error(a):void b.path("/")})}function g(){d.devLogin(function(a,d){return a?c.error(error):void b.path("/")})}a.loginData={email:"",password:""},a.message="",a.login=e,a.ldapLogin=f,a.devLogin=g}angular.module("main").controller("loginController",a),a.$inject=["$scope","$location","toastr","authServices"]}(),function(){function a(a,b,c,d){function e(){var e=a.regData;d.saveRegistration(e,function(a,d){return a?c.error(a):void b.path("/")})}a.regData={name:"",email:"",password:""},a.register=e}angular.module("main").controller("registerController",a),a.$inject=["$scope","$location","toastr","authServices"]}(),function(){function a(a,b,c,d,e,f,g,h,i){function j(){var c=b.board_id,e=b.task_id;async.parallel({board:function(a){return g.fetchBoardInfo(c,a)},task:function(a){return f.fetchTask(e,a)},users:function(a){return h.list("role=owner",a)}},function(b,c){return b?d.error(b):(a.board=c.board,a.users=c.users||[],void(a.task=c.task))})}function k(){if(!a.working){var b=a.task;b.developer&&(b.developer=b.developer._id),b.owner&&(b.owner=b.owner._id),a.working=!0,f.updateTask(b,function(b){return a.working=!1,b?d.error(b):(d.success("Task updated!"),void window.history.back())})}}function l(){a.working||(a.working=!0,f.deleteTask(a.task._id,function(b){return a.working=!1,b?d.error(b):void window.history.back()}))}a.board={},a.users=[],a.task={},a.isDeveloper=i.hasRole("developer"),a.isOwner=i.hasRole("owner"),a.update=k,a["delete"]=l,j()}angular.module("main").controller("editTaskController",a),a.$inject=["$scope","$routeParams","$location","toastr","localStorageService","taskServices","boardServices","userServices","authServices"]}(),function(){function a(a,c,d,e,f,g,h,i,j){function k(){async.parallel({boards:function(a){i.boards(a)},users:function(a){j.list(a)}},function(c,d){var e=d.boards,g=d.users,h={};h.boards=e.map(function(a){return{_id:a._id,name:a.name}}),h.stages=_.chain(e).pluck("stages").flatten().pluck("name").uniq().value(),h.stages.unshift("Backlog"),h.priorities=_.chain(e).pluck("priorities").flatten().pluck("name").uniq().value(),h.sizes=_.chain(e).pluck("sizes").flatten().pluck("name").uniq().value(),h.developers=g.filter(function(a){return a.roles.indexOf("developer")>-1}),h.owners=g.filter(function(a){return a.roles.indexOf("owner")>-1});var i=f.get(b);h=_.extend(h,i),o(h),a.filters=h,l()})}function l(){var c=a.filters,d={board:c.board?c.board._id:void 0,status:c.status,size:c.size,priority:c.priority,stage:c.stage};console.log(d),f.set(b,d),h.searchTasks(d,function(b,d){p(d,c),a.tasks=d})}function m(){console.log("clearing filters"),$(".task-filters").collapse("hide"),delete a.filters.board,delete a.filters.status,delete a.filters.size,delete a.filters.priority,delete a.filters.stage,l()}function n(a){switch(a){case"sizes":return"rgb(2, 90, 165)";case"priorities":return"rgb(240, 173, 78)";case"stages":return"rgb(92, 184, 92)";default:return"#ccc"}}function o(a){var b=a.board||a.status||a.size||a.priority||a.stage;b&&(console.log("found filters"),$(".task-filters").addClass("in"))}function p(b,c){var d={sizes:q("size",c.sizes,b),priorities:q("priority",c.priorities,b),stages:q("stage",c.stages,b)};return a.counts=d}function q(a,b,c){var d={};return b.forEach(function(b){d[b]=c.filter(function(c){return!!c[a]&&c[a].name===b}).length}),d}var r=g.authentication.user.roles;a.isAdmin=r.indexOf("admin")>-1,a.isOwner=r.indexOf("owner")>-1,a.tasks=[],a.filters={boards:[],statuses:[],stages:[],priorities:[],sizes:[],developers:[],owners:[]},a.counts={},a.applyFilters=l,a.clearFilters=m,a.getAttrColor=n,k()}angular.module("main").controller("taskListController",a),a.$inject=["$scope","$routeParams","$location","toastr","localStorageService","authServices","taskServices","boardServices","userServices"];var b="task-list.filters"}(),function(){function a(a,b,c,d,e,f,g,h){function i(){var c=b.board_id;async.parallel({board:function(a){return f.fetchBoardInfo(c,a)},users:function(a){return g.list(a)}},function(b,c){return b?d.error(b):(a.board=c.board,void(a.users=c.users))})}function j(){if(!a.working){var b=a.task,f={title:b.title,description:b.description,stage:b.stage,priority:b.priority,size:b.size,developer:b.developer?b.developer._id:null,owner:b.owner?b.owner._id:null,boardId:a.board._id};a.working=!0,e.createTask(f,function(b,e){a.working=!1,b?d.error(b):c.path("/boards/"+f.boardId)})}}a.board={},a.users={},a.task={},a.isDeveloper=h.hasRole("developer"),a.isOwner=h.hasRole("owner"),a.working=!1,a.createTask=j,i()}angular.module("main").controller("newTaskController",a),a.$inject=["$scope","$routeParams","$location","toastr","taskServices","boardServices","userServices","authServices"]}(),function(){function a(a,b,c,d,e,f,g,h){function i(){var c=b.task_id;e.fetchTask(c,function(b,c){return b?d.error(b):void(a.task=c)})}function j(){var b=a.task._id;e.completeTask(b,function(b,e){return b?d.error(b):void c.path("/boards/"+a.task.board)})}a.task={},a.taskLink="#",a.isDeveloper=h.authentication.user.roles.indexOf("developer")>-1,a.complete=j,i()}angular.module("main").controller("showTaskController",a),a.$inject=["$scope","$routeParams","$location","toastr","taskServices","boardServices","userServices","authServices"]}(),function(){function a(){return function(a,b,c,d){if(!a)return"";if(c=parseInt(c,10),!c)return a;if(a.length<=c)return a;if(a=a.substr(0,c),b){var e=a.lastIndexOf(" ");-1!=e&&(a=a.substr(0,e))}return a+(d||" …")}}angular.module("main").filter("cut",a)}(),function(){function a(){return function(a){var b=a;try{b=b.replace(/<(.*?)>/g,"$1").replace(/^[=\-]{2,}\s*$/g,"").replace(/\[\^.+?\](\: .*?$)?/g,"").replace(/\s{0,2}\[.*?\]: .*?$/g,"").replace(/\!\[.*?\][\[\(].*?[\]\)]/g,"").replace(/\[(.*?)\][\[\(].*?[\]\)]/g,"$1").replace(/^\s{1,2}\[(.*?)\]: (\S+)( ".*?")?\s*$/g,"").replace(/^\#{1,6}\s*([^#]*)\s*(\#{1,6})?/gm,"$1").replace(/([\*_]{1,2})(\S.*?\S)\1/g,"$2").replace(/(`{3,})(.*?)\1/gm,"$2").replace(/^-{3,}\s*$/g,"").replace(/`(.+?)`/g,"$1").replace(/\n{2,}/g,"\n\n").replace("- [ ]","").replace("- [x]","")}catch(c){return console.error(c),a}return b}}angular.module("main").filter("stripMarkdown",a)}(),function(){function a(){return{restrict:"E",scope:{tasks:"=tasks",editable:"=editable"},templateUrl:"app/tasks/directives/task-list-tmpl.html"}}angular.module("main").directive("taskList",a)}();
//# sourceMappingURL=main.min.js.map